[{"C:\\Users\\Antony\\projects\\tcc\\src\\index.tsx":"1","C:\\Users\\Antony\\projects\\tcc\\src\\App.tsx":"2","C:\\Users\\Antony\\projects\\tcc\\src\\styles\\global.ts":"3","C:\\Users\\Antony\\projects\\tcc\\src\\routes\\index.tsx":"4","C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Login\\index.tsx":"5","C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Login\\styles.ts":"6","C:\\Users\\Antony\\projects\\tcc\\src\\components\\Input\\index.tsx":"7","C:\\Users\\Antony\\projects\\tcc\\src\\components\\Input\\styles.ts":"8","C:\\Users\\Antony\\projects\\tcc\\src\\services\\api.ts":"9","C:\\Users\\Antony\\projects\\tcc\\src\\hooks\\index.tsx":"10","C:\\Users\\Antony\\projects\\tcc\\src\\hooks\\auth.tsx":"11","C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Dashboard\\index.tsx":"12","C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Dashboard\\styles.ts":"13","C:\\Users\\Antony\\projects\\tcc\\src\\components\\FormInput\\index.tsx":"14","C:\\Users\\Antony\\projects\\tcc\\src\\components\\FormInput\\styles.ts":"15","C:\\Users\\Antony\\projects\\tcc\\src\\hooks\\toast.tsx":"16","C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\index.tsx":"17","C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\styles.ts":"18","C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\Toast\\index.tsx":"19","C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\Toast\\style.ts":"20"},{"size":198,"mtime":1612479564195,"results":"21","hashOfConfig":"22"},{"size":354,"mtime":1614471158224,"results":"23","hashOfConfig":"22"},{"size":367,"mtime":1612483066738,"results":"24","hashOfConfig":"22"},{"size":343,"mtime":1614530686141,"results":"25","hashOfConfig":"22"},{"size":2010,"mtime":1614727715874,"results":"26","hashOfConfig":"22"},{"size":784,"mtime":1614533040845,"results":"27","hashOfConfig":"22"},{"size":473,"mtime":1614533300775,"results":"28","hashOfConfig":"22"},{"size":491,"mtime":1614533285005,"results":"29","hashOfConfig":"22"},{"size":116,"mtime":1614468054445,"results":"30","hashOfConfig":"22"},{"size":272,"mtime":1614727004865,"results":"31","hashOfConfig":"22"},{"size":1667,"mtime":1614726536258,"results":"32","hashOfConfig":"22"},{"size":3221,"mtime":1614543264051,"results":"33","hashOfConfig":"22"},{"size":836,"mtime":1614542200154,"results":"34","hashOfConfig":"22"},{"size":478,"mtime":1614542409897,"results":"35","hashOfConfig":"22"},{"size":385,"mtime":1614542386661,"results":"36","hashOfConfig":"22"},{"size":1449,"mtime":1614727448201,"results":"37","hashOfConfig":"22"},{"size":784,"mtime":1614726905491,"results":"38","hashOfConfig":"22"},{"size":162,"mtime":1614726905493,"results":"39","hashOfConfig":"22"},{"size":1179,"mtime":1614726905482,"results":"40","hashOfConfig":"22"},{"size":1190,"mtime":1614726905490,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1ek2rvp",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Antony\\projects\\tcc\\src\\index.tsx",[],["86","87","88","89","90"],"C:\\Users\\Antony\\projects\\tcc\\src\\App.tsx",[],"C:\\Users\\Antony\\projects\\tcc\\src\\styles\\global.ts",[],"C:\\Users\\Antony\\projects\\tcc\\src\\routes\\index.tsx",[],"C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Login\\index.tsx",["91"],"C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Login\\styles.ts",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\Input\\index.tsx",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\Input\\styles.ts",[],"C:\\Users\\Antony\\projects\\tcc\\src\\services\\api.ts",[],"C:\\Users\\Antony\\projects\\tcc\\src\\hooks\\index.tsx",[],"C:\\Users\\Antony\\projects\\tcc\\src\\hooks\\auth.tsx",["92"],"import React, { createContext, useCallback, useContext, useState } from 'react';\n\nimport api from '../services/api';\n\ninterface AuthState {\n  token: string;\n  user: object;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: object;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@TCC:token');\n    const user = localStorage.getItem('@TCC:user');\n\n    if (token && user) {\n      return { token, user: JSON.parse(user) };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('/session', {\n      email,\n      password,\n    });\n\n    const { token, user } = response.data;\n\n    localStorage.setItem('@TCC:token', `Bearer ${token}`);\n    localStorage.setItem('@TCC:user', JSON.stringify(user));\n\n    setData({ token, user });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@GoBarber:token');\n    localStorage.removeItem('@GoBarber:user');\n\n    setData({} as AuthState);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nfunction useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within a AuthProvider');\n  }\n\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n","C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Dashboard\\index.tsx",["93"],"import React, { useCallback, useState, FormEvent } from 'react';\nimport FormInput from '../../components/FormInput';\n\nimport { Container, Header } from './styles';\nimport LogoImg from '../../assets/logo.png';\n\nconst DashBoard: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [subtitle, setSubtitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [publicationDate, setPublicationDate] = useState('');\n  const [professor, setProfessor] = useState('');\n  const [keywords, setKeywords] = useState<String[]>([]);\n\n  const handleRedirect = useCallback(() => {\n    window.open('https://www.fapce.edu.br/index.html');\n  }, []);\n\n  const handleSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      console.log(title);\n    },\n    [title],\n  );\n\n  const handleAddKeywords = useCallback(\n    (newKeyword: String) => {\n      setKeywords([...keywords, newKeyword]);\n    },\n    [keywords],\n  );\n\n  return (\n    <>\n      <Header>\n        <img src={LogoImg} alt=\"LogoMarca\" />\n        <button onClick={handleRedirect} type=\"button\">\n          Acessar site da Unifap\n        </button>\n      </Header>\n      <Container>\n        <h1>Biblioteca Online - UniFAP</h1>\n        <div className=\"separator\" />\n        <form onSubmit={handleSubmit}>\n          <FormInput\n            labelName=\"Título\"\n            name=\"title\"\n            id=\"title-input\"\n            value={title}\n            placeholder=\"Insira o título da obra\"\n            onChange={e => setTitle(e.target.value)}\n          />\n          <div className=\"half-width\">\n            <FormInput\n              labelName=\"Subtítulo\"\n              name=\"subtitle\"\n              id=\"subtitle-input\"\n              value={subtitle}\n              placeholder=\"Insira o subtítulo da obra\"\n              onChange={e => setSubtitle(e.target.value)}\n            />\n\n            <FormInput\n              labelName=\"Autor(a)\"\n              name=\"author\"\n              id=\"author-input\"\n              value={author}\n              placeholder=\"Quem escreveu a obra\"\n              onChange={e => setAuthor(e.target.value)}\n            />\n          </div>\n\n          <div className=\"half-width\">\n            <FormInput\n              labelName=\"Data de publicação\"\n              name=\"publicationDate\"\n              id=\"publication_dt-input\"\n              value={publicationDate}\n              placeholder=\"Publicação entre...\"\n              onChange={e => setPublicationDate(e.target.value)}\n            />\n\n            <FormInput\n              labelName=\"Orientador(a)\"\n              name=\"professor\"\n              id=\"professor-input\"\n              value={professor}\n              placeholder=\"Quem orientou o(a) autor(a)\"\n              onChange={e => setProfessor(e.target.value)}\n            />\n          </div>\n          <FormInput\n            labelName=\"Palavra-chave\"\n            name=\"keyword\"\n            id=\"keyword-input\"\n            value={keywords as string[]}\n            placeholder=\"Insira as palavras-chaves contidas na obra\"\n            onChange={e => handleAddKeywords(e.target.value)}\n          />\n        </form>\n      </Container>\n    </>\n  );\n};\n\nexport default DashBoard;\n","C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\FormInput\\index.tsx",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\FormInput\\styles.ts",[],"C:\\Users\\Antony\\projects\\tcc\\src\\hooks\\toast.tsx",["94","95"],"import React, { createContext, useContext, useCallback, useState } from 'react';\n\nimport { v4 } from 'uuid';\n\nimport ToastContainer from '../components/ToastContainer';\n\nexport interface ToastMessage {\n  id: string;\n  type?: 'success' | 'error' | 'info';\n  title: string;\n  description?: string;\n}\n\ninterface ToastContextData {\n  addToast(message: Omit<ToastMessage, 'id'>): void;\n  removeToast(id: string): void;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const [messages, setMessages] = useState<ToastMessage[]>([]);\n\n  const addToast = useCallback(\n    ({ type, title, description }: Omit<ToastMessage, 'id'>) => {\n      const id = v4();\n\n      const toast = {\n        id,\n        type,\n        title,\n        description,\n      };\n\n      setMessages(oldState => [...oldState, toast]);\n    },\n    [],\n  );\n\n  const removeToast = useCallback((id: string) => {\n    setMessages(oldState => oldState.filter(message => message.id !== id));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer messages={messages} />\n    </ToastContext.Provider>\n  );\n};\n\nfunction useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('useToast must be used whitin a ToastProvider');\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };\n","C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\Toast\\index.tsx",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\Toast\\style.ts",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":44,"column":5,"nodeType":"108","endLine":44,"endColumn":39,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":17,"column":10,"nodeType":"112","messageId":"113","endLine":17,"endColumn":40},{"ruleId":"114","severity":1,"message":"115","line":22,"column":7,"nodeType":"116","messageId":"117","endLine":22,"endColumn":18},{"ruleId":"110","severity":1,"message":"118","line":15,"column":12,"nodeType":"112","messageId":"113","endLine":15,"endColumn":45},{"ruleId":"110","severity":1,"message":"119","line":16,"column":15,"nodeType":"112","messageId":"113","endLine":16,"endColumn":25},"lines-around-directive",["120"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'addToast'. Either include it or remove the dependency array.","ArrayExpression",["121"],"no-unused-vars","'credentials' is defined but never used.","Identifier","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected","'message' is defined but never used.","'id' is defined but never used.","padding-line-between-statements",{"desc":"122","fix":"123"},"Update the dependencies array to be: [signIn, email, password, addToast, history]",{"range":"124","text":"125"},[1184,1218],"[signIn, email, password, addToast, history]"]