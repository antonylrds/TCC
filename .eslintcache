[{"C:\\Users\\Antony\\projects\\tcc\\src\\index.tsx":"1","C:\\Users\\Antony\\projects\\tcc\\src\\App.tsx":"2","C:\\Users\\Antony\\projects\\tcc\\src\\styles\\global.ts":"3","C:\\Users\\Antony\\projects\\tcc\\src\\routes\\index.tsx":"4","C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Login\\index.tsx":"5","C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Login\\styles.ts":"6","C:\\Users\\Antony\\projects\\tcc\\src\\components\\Input\\index.tsx":"7","C:\\Users\\Antony\\projects\\tcc\\src\\components\\Input\\styles.ts":"8","C:\\Users\\Antony\\projects\\tcc\\src\\services\\api.ts":"9","C:\\Users\\Antony\\projects\\tcc\\src\\hooks\\index.tsx":"10","C:\\Users\\Antony\\projects\\tcc\\src\\hooks\\auth.tsx":"11","C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Dashboard\\index.tsx":"12","C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Dashboard\\styles.ts":"13","C:\\Users\\Antony\\projects\\tcc\\src\\components\\FormInput\\index.tsx":"14","C:\\Users\\Antony\\projects\\tcc\\src\\components\\FormInput\\styles.ts":"15","C:\\Users\\Antony\\projects\\tcc\\src\\hooks\\toast.tsx":"16","C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\index.tsx":"17","C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\styles.ts":"18","C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\Toast\\index.tsx":"19","C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\Toast\\style.ts":"20","C:\\Users\\Antony\\projects\\tcc\\src\\components\\Document\\index.tsx":"21","C:\\Users\\Antony\\projects\\tcc\\src\\components\\Document\\styles.ts":"22","C:\\Users\\Antony\\projects\\TCC\\src\\index.tsx":"23","C:\\Users\\Antony\\projects\\TCC\\src\\App.tsx":"24","C:\\Users\\Antony\\projects\\TCC\\src\\styles\\global.ts":"25","C:\\Users\\Antony\\projects\\TCC\\src\\hooks\\index.tsx":"26","C:\\Users\\Antony\\projects\\TCC\\src\\routes\\index.tsx":"27","C:\\Users\\Antony\\projects\\TCC\\src\\hooks\\toast.tsx":"28","C:\\Users\\Antony\\projects\\TCC\\src\\hooks\\auth.tsx":"29","C:\\Users\\Antony\\projects\\TCC\\src\\services\\api.ts":"30","C:\\Users\\Antony\\projects\\TCC\\src\\pages\\Login\\index.tsx":"31","C:\\Users\\Antony\\projects\\TCC\\src\\pages\\Dashboard\\index.tsx":"32","C:\\Users\\Antony\\projects\\TCC\\src\\pages\\Login\\styles.ts":"33","C:\\Users\\Antony\\projects\\TCC\\src\\pages\\Dashboard\\styles.ts":"34","C:\\Users\\Antony\\projects\\TCC\\src\\components\\ToastContainer\\index.tsx":"35","C:\\Users\\Antony\\projects\\TCC\\src\\components\\ToastContainer\\styles.ts":"36","C:\\Users\\Antony\\projects\\TCC\\src\\components\\Input\\index.tsx":"37","C:\\Users\\Antony\\projects\\TCC\\src\\components\\FormInput\\index.tsx":"38","C:\\Users\\Antony\\projects\\TCC\\src\\components\\Document\\index.tsx":"39","C:\\Users\\Antony\\projects\\TCC\\src\\components\\Input\\styles.ts":"40","C:\\Users\\Antony\\projects\\TCC\\src\\components\\FormInput\\styles.ts":"41","C:\\Users\\Antony\\projects\\TCC\\src\\components\\Document\\styles.ts":"42","C:\\Users\\Antony\\projects\\TCC\\src\\components\\ToastContainer\\Toast\\index.tsx":"43","C:\\Users\\Antony\\projects\\TCC\\src\\components\\ToastContainer\\Toast\\style.ts":"44"},{"size":198,"mtime":1612479564195,"results":"45","hashOfConfig":"46"},{"size":354,"mtime":1614471158224,"results":"47","hashOfConfig":"46"},{"size":367,"mtime":1612483066738,"results":"48","hashOfConfig":"46"},{"size":343,"mtime":1614530686141,"results":"49","hashOfConfig":"46"},{"size":2010,"mtime":1614727715874,"results":"50","hashOfConfig":"46"},{"size":784,"mtime":1614533040845,"results":"51","hashOfConfig":"46"},{"size":473,"mtime":1614533300775,"results":"52","hashOfConfig":"46"},{"size":491,"mtime":1614533285005,"results":"53","hashOfConfig":"46"},{"size":116,"mtime":1614468054445,"results":"54","hashOfConfig":"46"},{"size":272,"mtime":1614727004865,"results":"55","hashOfConfig":"46"},{"size":1667,"mtime":1614726536258,"results":"56","hashOfConfig":"46"},{"size":3720,"mtime":1614732075564,"results":"57","hashOfConfig":"46"},{"size":1472,"mtime":1614732435984,"results":"58","hashOfConfig":"46"},{"size":478,"mtime":1614542409897,"results":"59","hashOfConfig":"46"},{"size":385,"mtime":1614542386661,"results":"60","hashOfConfig":"46"},{"size":1449,"mtime":1614727448201,"results":"61","hashOfConfig":"46"},{"size":784,"mtime":1614726905491,"results":"62","hashOfConfig":"46"},{"size":162,"mtime":1614726905493,"results":"63","hashOfConfig":"46"},{"size":1179,"mtime":1614726905482,"results":"64","hashOfConfig":"46"},{"size":1190,"mtime":1614726905490,"results":"65","hashOfConfig":"46"},{"size":711,"mtime":1614731349032,"results":"66","hashOfConfig":"46"},{"size":737,"mtime":1614732711142,"results":"67","hashOfConfig":"46"},{"size":208,"mtime":1617984950744,"results":"68","hashOfConfig":"69"},{"size":372,"mtime":1617984950734,"results":"70","hashOfConfig":"69"},{"size":393,"mtime":1619388414729,"results":"71","hashOfConfig":"69"},{"size":284,"mtime":1617984950744,"results":"72","hashOfConfig":"69"},{"size":357,"mtime":1619387161873,"results":"73","hashOfConfig":"69"},{"size":1511,"mtime":1617984950744,"results":"74","hashOfConfig":"69"},{"size":1740,"mtime":1617984950744,"results":"75","hashOfConfig":"69"},{"size":123,"mtime":1617984950744,"results":"76","hashOfConfig":"69"},{"size":2099,"mtime":1619387190587,"results":"77","hashOfConfig":"69"},{"size":3670,"mtime":1619388880209,"results":"78","hashOfConfig":"69"},{"size":830,"mtime":1619387354880,"results":"79","hashOfConfig":"69"},{"size":1556,"mtime":1617984950744,"results":"80","hashOfConfig":"69"},{"size":817,"mtime":1617984950744,"results":"81","hashOfConfig":"69"},{"size":171,"mtime":1617984950744,"results":"82","hashOfConfig":"69"},{"size":493,"mtime":1617984950734,"results":"83","hashOfConfig":"69"},{"size":500,"mtime":1617984950734,"results":"84","hashOfConfig":"69"},{"size":737,"mtime":1617984950734,"results":"85","hashOfConfig":"69"},{"size":524,"mtime":1617984950734,"results":"86","hashOfConfig":"69"},{"size":409,"mtime":1617984950734,"results":"87","hashOfConfig":"69"},{"size":786,"mtime":1617984950734,"results":"88","hashOfConfig":"69"},{"size":1236,"mtime":1617984950734,"results":"89","hashOfConfig":"69"},{"size":1264,"mtime":1617984950744,"results":"90","hashOfConfig":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"1ek2rvp",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"93"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"93"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"93"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"93"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"1wmbymw",{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"142"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"142"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"142"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"C:\\Users\\Antony\\projects\\tcc\\src\\index.tsx",[],["188","189","190","191","192"],"C:\\Users\\Antony\\projects\\tcc\\src\\App.tsx",[],"C:\\Users\\Antony\\projects\\tcc\\src\\styles\\global.ts",[],"C:\\Users\\Antony\\projects\\tcc\\src\\routes\\index.tsx",[],"C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Login\\index.tsx",["193"],"import React, { FormEvent, useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FiLogIn, FiLock, FiUser } from 'react-icons/fi';\n\nimport { useAuth } from '../../hooks/auth';\nimport { useToast } from '../../hooks/toast';\n\nimport LogoImg from '../../assets/logo.png';\n\nimport Input from '../../components/Input';\nimport { Container } from './styles';\n\nconst Login: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (event: FormEvent<HTMLFormElement>): Promise<void> => {\n      event.preventDefault();\n\n      try {\n        await signIn({ email, password });\n\n        addToast({\n          type: 'success',\n          title: 'Usuário autenticado com sucesso',\n        });\n\n        history.push('/dashboard');\n      } catch (err) {\n        addToast({\n          type: 'error',\n          title: 'Erro na autenticação',\n          description:\n            'Ocorreu um erro ao fazer login, verifique as credenciais',\n        });\n      }\n    },\n    [signIn, email, password, history],\n  );\n\n  return (\n    <>\n      <Container>\n        <img src={LogoImg} alt=\"logomarca\" width={350} />\n        <form onSubmit={handleSubmit}>\n          <h1>Entrar</h1>\n          <Input\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"E-mail\"\n            icon={FiUser}\n          />\n          <Input\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Senha\"\n            icon={FiLock}\n          />\n\n          <button type=\"submit\">\n            <FiLogIn /> Entrar\n          </button>\n        </form>\n        <div />\n      </Container>\n    </>\n  );\n};\n\nexport default Login;\n","C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Login\\styles.ts",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\Input\\index.tsx",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\Input\\styles.ts",[],"C:\\Users\\Antony\\projects\\tcc\\src\\services\\api.ts",[],"C:\\Users\\Antony\\projects\\tcc\\src\\hooks\\index.tsx",[],"C:\\Users\\Antony\\projects\\tcc\\src\\hooks\\auth.tsx",["194"],"import React, { createContext, useCallback, useContext, useState } from 'react';\n\nimport api from '../services/api';\n\ninterface AuthState {\n  token: string;\n  user: object;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: object;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@TCC:token');\n    const user = localStorage.getItem('@TCC:user');\n\n    if (token && user) {\n      return { token, user: JSON.parse(user) };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('/session', {\n      email,\n      password,\n    });\n\n    const { token, user } = response.data;\n\n    localStorage.setItem('@TCC:token', `Bearer ${token}`);\n    localStorage.setItem('@TCC:user', JSON.stringify(user));\n\n    setData({ token, user });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@GoBarber:token');\n    localStorage.removeItem('@GoBarber:user');\n\n    setData({} as AuthState);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nfunction useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within a AuthProvider');\n  }\n\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n","C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Dashboard\\index.tsx",["195"],"import React, { useCallback, useState, FormEvent } from 'react';\nimport { FiSearch } from 'react-icons/fi';\nimport FormInput from '../../components/FormInput';\nimport Document from '../../components/Document';\n\nimport { Container, Header } from './styles';\nimport LogoImg from '../../assets/logo.png';\n\nconst DashBoard: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [subtitle, setSubtitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [publicationDate, setPublicationDate] = useState('');\n  const [professor, setProfessor] = useState('');\n  const [keywords, setKeywords] = useState<String[]>([]);\n\n  const handleRedirect = useCallback(() => {\n    window.open('https://www.fapce.edu.br/index.html');\n  }, []);\n\n  const handleSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      console.log(title);\n    },\n    [title],\n  );\n\n  const handleAddKeywords = useCallback(\n    (newKeyword: String) => {\n      setKeywords([...keywords, newKeyword]);\n    },\n    [keywords],\n  );\n\n  return (\n    <>\n      <Header>\n        <img src={LogoImg} alt=\"LogoMarca\" />\n        <button onClick={handleRedirect} type=\"button\">\n          Acessar site da Unifap\n        </button>\n      </Header>\n      <Container>\n        <h1>Biblioteca Online - UniFAP</h1>\n        <div className=\"separator\" />\n        <form onSubmit={handleSubmit}>\n          <FormInput\n            labelName=\"Título\"\n            name=\"title\"\n            id=\"title-input\"\n            value={title}\n            placeholder=\"Insira o título da obra\"\n            onChange={e => setTitle(e.target.value)}\n          />\n          <div className=\"half-width\">\n            <FormInput\n              labelName=\"Subtítulo\"\n              name=\"subtitle\"\n              id=\"subtitle-input\"\n              value={subtitle}\n              placeholder=\"Insira o subtítulo da obra\"\n              onChange={e => setSubtitle(e.target.value)}\n            />\n\n            <FormInput\n              labelName=\"Autor(a)\"\n              name=\"author\"\n              id=\"author-input\"\n              value={author}\n              placeholder=\"Quem escreveu a obra\"\n              onChange={e => setAuthor(e.target.value)}\n            />\n          </div>\n\n          <div className=\"half-width\">\n            <FormInput\n              labelName=\"Data de publicação\"\n              name=\"publicationDate\"\n              id=\"publication_dt-input\"\n              value={publicationDate}\n              placeholder=\"Publicação entre...\"\n              onChange={e => setPublicationDate(e.target.value)}\n            />\n\n            <FormInput\n              labelName=\"Orientador(a)\"\n              name=\"professor\"\n              id=\"professor-input\"\n              value={professor}\n              placeholder=\"Quem orientou o(a) autor(a)\"\n              onChange={e => setProfessor(e.target.value)}\n            />\n          </div>\n          <FormInput\n            labelName=\"Palavra-chave\"\n            name=\"keyword\"\n            id=\"keyword-input\"\n            value={keywords as string[]}\n            placeholder=\"Insira as palavras-chaves contidas na obra\"\n            onChange={e => handleAddKeywords(e.target.value)}\n          />\n          <div className=\"right-aligned\">\n            <button type=\"button\">\n              <FiSearch size={20} />\n              Buscar\n            </button>\n          </div>\n        </form>\n\n        <div className=\"document-list\">\n          <div className=\"results\">\n            <h2>Resultado(s): 0</h2>\n          </div>\n          <div className=\"separator\" />\n          <Document />\n          <Document />\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default DashBoard;\n","C:\\Users\\Antony\\projects\\tcc\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\FormInput\\index.tsx",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\FormInput\\styles.ts",[],"C:\\Users\\Antony\\projects\\tcc\\src\\hooks\\toast.tsx",["196","197"],"import React, { createContext, useContext, useCallback, useState } from 'react';\n\nimport { v4 } from 'uuid';\n\nimport ToastContainer from '../components/ToastContainer';\n\nexport interface ToastMessage {\n  id: string;\n  type?: 'success' | 'error' | 'info';\n  title: string;\n  description?: string;\n}\n\ninterface ToastContextData {\n  addToast(message: Omit<ToastMessage, 'id'>): void;\n  removeToast(id: string): void;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const [messages, setMessages] = useState<ToastMessage[]>([]);\n\n  const addToast = useCallback(\n    ({ type, title, description }: Omit<ToastMessage, 'id'>) => {\n      const id = v4();\n\n      const toast = {\n        id,\n        type,\n        title,\n        description,\n      };\n\n      setMessages(oldState => [...oldState, toast]);\n    },\n    [],\n  );\n\n  const removeToast = useCallback((id: string) => {\n    setMessages(oldState => oldState.filter(message => message.id !== id));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer messages={messages} />\n    </ToastContext.Provider>\n  );\n};\n\nfunction useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('useToast must be used whitin a ToastProvider');\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };\n","C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\Toast\\index.tsx",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\ToastContainer\\Toast\\style.ts",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\Document\\index.tsx",[],"C:\\Users\\Antony\\projects\\tcc\\src\\components\\Document\\styles.ts",[],"C:\\Users\\Antony\\projects\\TCC\\src\\index.tsx",[],["198","199","200","201","202"],"C:\\Users\\Antony\\projects\\TCC\\src\\App.tsx",[],"C:\\Users\\Antony\\projects\\TCC\\src\\styles\\global.ts",[],"C:\\Users\\Antony\\projects\\TCC\\src\\hooks\\index.tsx",[],"C:\\Users\\Antony\\projects\\TCC\\src\\routes\\index.tsx",[],"C:\\Users\\Antony\\projects\\TCC\\src\\hooks\\toast.tsx",["203","204"],"import React, { createContext, useContext, useCallback, useState } from 'react';\r\n\r\nimport { v4 } from 'uuid';\r\n\r\nimport ToastContainer from '../components/ToastContainer';\r\n\r\nexport interface ToastMessage {\r\n  id: string;\r\n  type?: 'success' | 'error' | 'info';\r\n  title: string;\r\n  description?: string;\r\n}\r\n\r\ninterface ToastContextData {\r\n  addToast(message: Omit<ToastMessage, 'id'>): void;\r\n  removeToast(id: string): void;\r\n}\r\n\r\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\r\n\r\nconst ToastProvider: React.FC = ({ children }) => {\r\n  const [messages, setMessages] = useState<ToastMessage[]>([]);\r\n\r\n  const addToast = useCallback(\r\n    ({ type, title, description }: Omit<ToastMessage, 'id'>) => {\r\n      const id = v4();\r\n\r\n      const toast = {\r\n        id,\r\n        type,\r\n        title,\r\n        description,\r\n      };\r\n\r\n      setMessages(oldState => [...oldState, toast]);\r\n    },\r\n    [],\r\n  );\r\n\r\n  const removeToast = useCallback((id: string) => {\r\n    setMessages(oldState => oldState.filter(message => message.id !== id));\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ addToast, removeToast }}>\r\n      {children}\r\n      <ToastContainer messages={messages} />\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nfunction useToast(): ToastContextData {\r\n  const context = useContext(ToastContext);\r\n\r\n  if (!context) {\r\n    throw new Error('useToast must be used whitin a ToastProvider');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nexport { ToastProvider, useToast };\r\n","C:\\Users\\Antony\\projects\\TCC\\src\\hooks\\auth.tsx",["205"],"import React, { createContext, useCallback, useContext, useState } from 'react';\r\n\r\nimport api from '../services/api';\r\n\r\ninterface AuthState {\r\n  token: string;\r\n  user: object;\r\n}\r\n\r\ninterface SignInCredentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ninterface AuthContextData {\r\n  user: object;\r\n  signIn(credentials: SignInCredentials): Promise<void>;\r\n  signOut(): void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\r\n\r\nconst AuthProvider: React.FC = ({ children }) => {\r\n  const [data, setData] = useState<AuthState>(() => {\r\n    const token = localStorage.getItem('@TCC:token');\r\n    const user = localStorage.getItem('@TCC:user');\r\n\r\n    if (token && user) {\r\n      return { token, user: JSON.parse(user) };\r\n    }\r\n\r\n    return {} as AuthState;\r\n  });\r\n\r\n  const signIn = useCallback(async ({ email, password }) => {\r\n    const response = await api.post('/session', {\r\n      email,\r\n      password,\r\n    });\r\n\r\n    const { token, user } = response.data;\r\n\r\n    localStorage.setItem('@TCC:token', `Bearer ${token}`);\r\n    localStorage.setItem('@TCC:user', JSON.stringify(user));\r\n\r\n    setData({ token, user });\r\n  }, []);\r\n\r\n  const signOut = useCallback(() => {\r\n    localStorage.removeItem('@GoBarber:token');\r\n    localStorage.removeItem('@GoBarber:user');\r\n\r\n    setData({} as AuthState);\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nfunction useAuth(): AuthContextData {\r\n  const context = useContext(AuthContext);\r\n\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within a AuthProvider');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nexport { AuthProvider, useAuth };\r\n","C:\\Users\\Antony\\projects\\TCC\\src\\services\\api.ts",[],"C:\\Users\\Antony\\projects\\TCC\\src\\pages\\Login\\index.tsx",["206"],"import React, { FormEvent, useCallback, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FiLogIn, FiLock, FiUser } from 'react-icons/fi';\r\n\r\nimport { useAuth } from '../../hooks/auth';\r\nimport { useToast } from '../../hooks/toast';\r\n\r\nimport LogoImg from '../../assets/logo-quadrada.png';\r\n\r\nimport Input from '../../components/Input';\r\nimport { Container } from './styles';\r\n\r\nconst Login: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const { signIn } = useAuth();\r\n  const { addToast } = useToast();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (event: FormEvent<HTMLFormElement>): Promise<void> => {\r\n      event.preventDefault();\r\n\r\n      try {\r\n        await signIn({ email, password });\r\n\r\n        addToast({\r\n          type: 'success',\r\n          title: 'Usuário autenticado com sucesso',\r\n        });\r\n\r\n        history.push('/dashboard');\r\n      } catch (err) {\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro na autenticação',\r\n          description:\r\n            'Ocorreu um erro ao fazer login, verifique as credenciais',\r\n        });\r\n      }\r\n    },\r\n    [signIn, email, password, history],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <img src={LogoImg} alt=\"logomarca\" width={250} />\r\n        <form onSubmit={handleSubmit}>\r\n          <h1>Entrar</h1>\r\n          <Input\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"E-mail\"\r\n            icon={FiUser}\r\n          />\r\n          <Input\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Senha\"\r\n            icon={FiLock}\r\n          />\r\n\r\n          <button type=\"submit\">\r\n            <FiLogIn /> Entrar\r\n          </button>\r\n        </form>\r\n        <div />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Antony\\projects\\TCC\\src\\pages\\Dashboard\\index.tsx",["207","208","209","210","211"],"C:\\Users\\Antony\\projects\\TCC\\src\\pages\\Login\\styles.ts",[],"C:\\Users\\Antony\\projects\\TCC\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\Antony\\projects\\TCC\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\Antony\\projects\\TCC\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\Antony\\projects\\TCC\\src\\components\\Input\\index.tsx",[],"C:\\Users\\Antony\\projects\\TCC\\src\\components\\FormInput\\index.tsx",[],"C:\\Users\\Antony\\projects\\TCC\\src\\components\\Document\\index.tsx",[],"C:\\Users\\Antony\\projects\\TCC\\src\\components\\Input\\styles.ts",[],"C:\\Users\\Antony\\projects\\TCC\\src\\components\\FormInput\\styles.ts",[],"C:\\Users\\Antony\\projects\\TCC\\src\\components\\Document\\styles.ts",[],"C:\\Users\\Antony\\projects\\TCC\\src\\components\\ToastContainer\\Toast\\index.tsx",[],"C:\\Users\\Antony\\projects\\TCC\\src\\components\\ToastContainer\\Toast\\style.ts",[],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":44,"column":5,"nodeType":"224","endLine":44,"endColumn":39,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":17,"column":10,"nodeType":"228","messageId":"229","endLine":17,"endColumn":40},{"ruleId":"230","severity":1,"message":"231","line":24,"column":7,"nodeType":"232","messageId":"233","endLine":24,"endColumn":18},{"ruleId":"226","severity":1,"message":"234","line":15,"column":12,"nodeType":"228","messageId":"229","endLine":15,"endColumn":45},{"ruleId":"226","severity":1,"message":"235","line":16,"column":15,"nodeType":"228","messageId":"229","endLine":16,"endColumn":25},{"ruleId":"212","replacedBy":"236"},{"ruleId":"214","replacedBy":"237"},{"ruleId":"216","replacedBy":"238"},{"ruleId":"218","replacedBy":"239"},{"ruleId":"220","replacedBy":"240"},{"ruleId":"226","severity":1,"message":"234","line":15,"column":12,"nodeType":"228","messageId":"229","endLine":15,"endColumn":45},{"ruleId":"226","severity":1,"message":"235","line":16,"column":15,"nodeType":"228","messageId":"229","endLine":16,"endColumn":25},{"ruleId":"226","severity":1,"message":"227","line":17,"column":10,"nodeType":"228","messageId":"229","endLine":17,"endColumn":40},{"ruleId":"222","severity":1,"message":"223","line":44,"column":5,"nodeType":"224","endLine":44,"endColumn":39,"suggestions":"241"},{"ruleId":"226","severity":1,"message":"242","line":11,"column":10,"nodeType":"228","messageId":"229","endLine":11,"endColumn":18},{"ruleId":"243","severity":1,"message":"242","line":11,"column":10,"nodeType":"228","messageId":"229","endLine":11,"endColumn":18},{"ruleId":"226","severity":1,"message":"244","line":11,"column":20,"nodeType":"228","messageId":"229","endLine":11,"endColumn":31},{"ruleId":"243","severity":1,"message":"244","line":11,"column":20,"nodeType":"228","messageId":"229","endLine":11,"endColumn":31},{"ruleId":"230","severity":1,"message":"231","line":24,"column":7,"nodeType":"232","messageId":"233","endLine":24,"endColumn":18},"lines-around-directive",["245"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'addToast'. Either include it or remove the dependency array.","ArrayExpression",["246"],"no-unused-vars","'credentials' is defined but never used.","Identifier","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected","'message' is defined but never used.","'id' is defined but never used.",["245"],[],[],[],[],["247"],"'subtitle' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'setSubtitle' is assigned a value but never used.","padding-line-between-statements",{"desc":"248","fix":"249"},{"desc":"248","fix":"250"},"Update the dependencies array to be: [signIn, email, password, addToast, history]",{"range":"251","text":"252"},{"range":"253","text":"252"},[1184,1218],"[signIn, email, password, addToast, history]",[1236,1270]]